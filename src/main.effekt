module main
import src/lib
import io/console


record TimeEntry(startTime: String, endTime: String)
record Project(name: String, times: List[TimeEntry])

effect startTimer(): Unit
effect stopTimer(): Unit
effect quitMainLoop(): Unit
effect switchProject(projectName: String): Unit

type TimerState {
  Stopped()
  Running()
}

def iterateTimeEntries(entries: List[TimeEntry]): Unit =
  entries match {
    case Nil() => println("Thats it!")
    case Cons(a, rest) => {
      println(a.startTime)
      println(a.endTime)

      iterateTimeEntries(rest)
    }
  }


def handleInput(state: TimerState): Unit / { startTimer, stopTimer, quitMainLoop, switchProject } = {
  with console;
  val input = do readLine()

  if (input == "s") {
    do startTimer()
  }
  else if (input == "p") {
    do stopTimer()
  }
  else if (input == "q") {
    do quitMainLoop()
  }
  else if (input == "n") {
    println("Enter new project name")
    val newProjectName = do readLine()
    do switchProject(newProjectName)
  }
  else {
    println("Unknown command")
  }
}


def mainLoop(): Unit = {
  var active: Bool = true
  var state: TimerState = Stopped()
  
  var projectList: List[Project] = []

  var project: Project = Project("none", [])
  var startTime: String = ""
  var endTime: String = ""
  
  while (active) {
    try{
      handleInput(state)
    } with startTimer {
      println("Timer started")
      state = Running()
      startTime = getCurrentTime()
      resume(())
    } with stopTimer {
      println("Timer stopped")
      state = Stopped()
      endTime = getCurrentTime()
      val timeEntry = TimeEntry(startTime, endTime)
      project = Project(project.name, project.times.append([timeEntry]))
      resume(())
    } with switchProject {
      projectName =>
      println(projectName)
    } with quitMainLoop {
      active = false
    }
  }

  iterateTimeEntries(project.times)
  println(calcTimeDiffInSecs(startTime, endTime))
}

def main(): Unit = {
  println("Hey! Welcome to effect time tracker!")
  println("Press 's' to start time tracking")
  println("Press 'p' to stop")
  println("Press 'q' to quit")
  println("Press 'n' to switch project")

  mainLoop()

  println("Goodbye!")
}