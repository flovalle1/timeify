import src/lib
import src/jsondb

def mainLoop(): Unit = {
  var active: Bool = true
  var state: TimerState = Stopped()
  
  var projectList = loadProjectList()

  var currentProject: Project = Project("admin", [])
  var startTime: String = ""
  var endTime: String = ""

  try {
    handleInput(state)
  } with startTimer {
    sendTimerStartedRequest()
    startTime = getCurrentTime()
    state = Running()
    println("Timer started")
  } with stopTimer {
    println("You can't stop the timer at first.")
  } with switchProject { projectName =>
    println("You can't switch project at first.")
  } with quitMainLoop {
    active = false
  }
  
  while (active) {
    try{
      println("project " ++ currentProject.name)
      handleInput(state)
    } with startTimer {
      println("Timer started")
      state = Running()
      startTime = getCurrentTime()
      
      resume(())
    } with stopTimer {
      println("Timer stopped")
      state = Stopped()
      endTime = getCurrentTime()
      val timeEntry = TimeEntry(startTime, endTime)
      currentProject = Project(currentProject.name, currentProject.times.append([timeEntry]))
      resume(())
    } with switchProject {  projectName =>
      println("Switching project to " ++ projectName)
      projectList = updateProjectList(projectList, currentProject)
      try {
        currentProject = do lookupProject(projectName)
      } with lookupProject { name =>
        val project = boundaryDefault[Project] { iterateProjectList(name, projectList) } {
          println("Project not found, creating new project.")
          projectList = projectList.append([Project(name, [])])
          Project(name,[])
        }
        resume(project)
      }
  
    } with quitMainLoop {
      active = false
      saveProjectList(projectList)
    }
  }

  projectList = updateProjectList(projectList, currentProject)
  projectList.foreach {
    case project =>
      val totalSeconds = sumTimeEntries(project.times)
      println(project.name ++ ": " ++ convertSecsToHMS(totalSeconds))
  }

}

def main(): Unit = {
  mainLoop()
}